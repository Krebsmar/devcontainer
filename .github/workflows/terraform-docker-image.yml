name: Terraform Docker Image CI

on:
  push:
    paths:
      - 'terraform/**'
    branches: [ "main" ]
  pull_request:
    paths:
      - 'terraform/**'
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    env:
      TYPE: terraform

    steps:
    - uses: actions/checkout@v3
    - id: lower-repo
      shell: pwsh
      run: |
        "::set-output name=repository::$($env:GITHUB_REPOSITORY.ToLowerInvariant())"
    - name: Build the Docker image
      run: docker build . --file ${{env.TYPE}}/dockerfile --tag ghcr.io/${{ steps.lower-repo.outputs.repository }}/${{env.TYPE}}:v0.${{ github.run_number }}
    - name: Login to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Push the Docker image
      run: docker push ghcr.io/${{ steps.lower-repo.outputs.repository }}/${{env.TYPE}}:v0.${{ github.run_number }}
    - name: Run Snyk to check Docker image for vulnerabilities
      # Snyk can be used to break the build when it detects vulnerabilities.
      # In this case we want to upload the issues to GitHub Code Scanning
      continue-on-error: true
      uses: snyk/actions/docker@master
      env:
        # In order to use the Snyk Action you will need to have a Snyk API token.
        # See https://docs.snyk.io/integrations/ci-cd-integrations/github-actions-integration#getting-your-snyk-token
        # or you can sign up for free at https://snyk.io/login
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: ghcr.io/${{ steps.lower-repo.outputs.repository }}/${{env.TYPE}}:v0.${{ github.run_number }}
        args: --file=Dockerfile
    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: snyk.sarif
